{"version":3,"sources":["components/QuizPage.js","components/Homepage.js","App.js","index.js"],"names":["QuizPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextQuestion","state","counter","next","setState","parseInt","bgColor","Array","fill","clicked","index","Math","floor","random","finished","checkAnswer","choosen","ques","corr_index","correct_answer","score","showOption","option","i","incorrect_answers","splice","map","j","react_default","a","createElement","key","toString","className","concat","dangerouslySetInnerHTML","__html","onClick","data","loaded","_this2","fetch","api","then","res","json","results","homepage","question","React","Component","API","categories","10","11","17","27","18","19","21","29","Homepage","generateQuestion","id","getAPI","getQuizPage","quizPage","components_QuizPage","keys","alt","src","App","components_Homepage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8d711550.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass QuizPage extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      data:[],//array for storing questions\r\n      counter:0,//variable for keeping track of question number\r\n      score:0,\r\n      finished:false,//will change after all questions are shown\r\n      loaded:false,//wait for the page to call api\r\n      clicked:false,//cannot click more than one option\r\n      index:Math.floor(Math.random()*4),//random index for storing correct answer\r\n      bgColor:Array(4).fill(\"transparent\"),/*fil background of options with transparent\r\n      and change depending whether the question is correct or wrong.*/\r\n      next:false\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    //call api\r\n    fetch(this.props.api)\r\n    .then(res => {\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n      this.setState({data:data.results,loaded:true})\r\n    })\r\n  }\r\n  nextQuestion = () => {\r\n    if(this.state.counter<9 && this.state.next === true){\r\n      //reset everything before moving onto the next question\r\n      this.setState({counter:parseInt(this.state.counter)+1,\r\n        bgColor:Array(4).fill(\"transparent\"),clicked:false,next:false},function(){\r\n        this.setState({index:Math.floor(Math.random()*4)})\r\n      })\r\n    }\r\n    else if(this.state.next === false){\r\n        return false;\r\n    }\r\n    else{\r\n      this.setState({finished:true});\r\n    }\r\n  }\r\n\r\n  checkAnswer = (choosen,ques,index,corr_index) => {\r\n      let bgColor = this.state.bgColor;\r\n      if(!this.state.clicked){\r\n        if(choosen === ques.correct_answer){\r\n          bgColor[index]=\"green\";//changes background of the correct index\r\n          this.setState({score:parseInt(this.state.score)+10,bgColor:bgColor,clicked:true,next:true});\r\n        }\r\n        else{\r\n          bgColor[index] = \"red\";\r\n          bgColor[corr_index] = \"green\";\r\n          this.setState({bgColor:bgColor,clicked:true,next:true})\r\n        }\r\n      }\r\n  }\r\n  showOption=(ques) => {\r\n    let option=[]\r\n    //store incorrect answer in the first three index and store correct answer randomly in any four\r\n    for(let i=0;i<3;i++)  {\r\n      option[i]=ques.incorrect_answers[i];\r\n    }\r\n    option.splice(this.state.index,0,ques.correct_answer);\r\n    return option.map((j,index) => {\r\n      return <li key={index.toString()} className={`options ${this.state.bgColor[index]}`}\r\n        dangerouslySetInnerHTML={{__html:j}}\r\n        onClick = {() => this.checkAnswer(j,ques,index,this.state.index)}/>\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.loaded && !this.state.finished){\r\n      return(\r\n        <div className=\"quiz-container\">\r\n          <button className=\"back-btn\" onClick={this.props.homepage}>&larr; Go Back</button>\r\n          <span className=\"quiz-score\">Score : {this.state.score}</span>\r\n          <div className = \"quiz-info\">\r\n            <p className=\"quiz-ques\"\r\n              dangerouslySetInnerHTML={{\r\n                __html:this.state.data[this.state.counter].question}}/>\r\n            <ul className=\"option-list\">\r\n              {this.showOption(this.state.data[this.state.counter])}\r\n            </ul>\r\n          </div>\r\n          <button className=\"next\" onClick={this.nextQuestion}>Next</button>\r\n        </div>\r\n      )\r\n    }\r\n    else if(this.state.finished){\r\n      return(\r\n        <div className=\"quiz-container\">\r\n          <div className=\"quiz-over\">\r\n            <h4 className=\"final-score\">You Scored:{this.state.score}</h4>\r\n            <button className=\"back-btn\" onClick={this.props.homepage}>\r\n              Try another Catergory</button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <div className=\"quiz-container\">\r\n          <div className=\"loader\"></div>\r\n          <button className=\"back-btn\" onClick={this.props.homepage}>&larr; Go Back</button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default QuizPage\r\n","import React from 'react';\r\nimport QuizPage from './QuizPage'\r\n\r\nlet API='https://opentdb.com/api.php?amount=10&type=multiple';\r\n//category options\r\nconst categories= {\r\n  10:\"Books\",\r\n  11:\"Films\",\r\n  17:\"Science & Nature\",\r\n  27:\"Animals\",\r\n  18:\"Computers\",\r\n  19:\"Mathematics\",\r\n  21:\"Sports\",\r\n  29:\"Comics\"\r\n}\r\nclass Homepage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      quizPage:false, //shows homepage onload\r\n      api:\"\"\r\n    }\r\n  }\r\n  render(){\r\n    if(!this.state.quizPage){\r\n      return(\r\n        <div className=\"wrapper\">\r\n          <h1 className=\"heading\">Pop  Quiz</h1>\r\n          <div className=\"category-container\">{Object.keys(categories).map((key,index) => {\r\n            return <div className=\"category-name\" onClick={()=>this.generateQuestion(key)}>\r\n              <p className=\"category-text\">{categories[key]}</p>\r\n              <img className=\"category-logo\" alt={`${categories[key]}`} src={`/pop-quiz/images/${categories[key]}.svg`}/>\r\n            </div>\r\n          })}</div>\r\n      </div>\r\n      )\r\n    }\r\n    else{\r\n      return(\r\n        <QuizPage homepage = {this.getQuizPage}\r\n                  api = {this.state.api}\r\n        />\r\n      )\r\n    }\r\n  }\r\n\r\n  generateQuestion = (id) => {\r\n    this.getAPI(id)\r\n    this.getQuizPage();\r\n  }\r\n  getAPI = (id) => {\r\n    API += `&category=${id}`;\r\n    this.setState({api:API})\r\n  }\r\n  getQuizPage = () => {\r\n    this.setState(state => ({\r\n      quizPage:!state.quizPage //toggle quizPage state\r\n      }))\r\n  }\r\n}\r\nexport default Homepage;\r\n","import React from 'react';\nimport Homepage from './components/Homepage';\nimport './style/homepage.css'\nimport './style/quizpage.css'\n\nclass App extends React.Component {\n  render(){\n    return(\n        <Homepage/>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}